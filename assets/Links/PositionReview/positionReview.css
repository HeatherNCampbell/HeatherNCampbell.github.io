img, #main {
    border: 3px solid black;
  }
  #main {
    height: 475px;
    /* position: relative; */
  }
  #main img  {
    width: 250px;
    height: 250px;
  }
  #dogs {
    width: 250px;
    height: 250px;
  }
  #hedgehog img {
    width: 100%;
    /* width: 100vw; */
  }
  
  /* CSS POSITIONS */
  
  #one {
    /* Static Position */
    /* Default value for position. Elements render/display in order, as they appear in the document flow */
    /* position: static; */
  
    /* Relative Position */
    /* The element is positioned relative to its normal/starting position */
    position: relative;
    top: 300px;
    left: 600px;
  }
  
  #two {
    /* Absolute Position */
    /* The element is positioned relative to its first positioned (not static) ancestor element - more than one could be in the 'family tree'*/
    position: absolute;
top: 10px;
right: 10px;

  }

  #three {
      /* Fixed position */
      /* The element will always be positioned relative to the browser window */
      /* When scrolling will stay in place */
position: fixed;
right: 10px;
top:270px;
  }

  #kindle {
      /* Sticky-position */
      /* Usually used for a nav bar */
      /* Sticky is used to stick the position of an element to the top, while inside the parent element.  Scrolling out / down will change the element to relative */
      /* Blend of relative and fixed */
      /* This is an example of a sticky position element inside a parent element that is not the body element. Element is fixed/sticks to the top of the browser window while the pareent element is still in view */
position: sticky;
top: 0;

  }

/* This is another example of a sticky position element inside the body element (div). The element is fixed/sticks to the top of the browser window while the body element is still in view*/
#dogs {
    position: sticky;
    top: 0;
}
  
  